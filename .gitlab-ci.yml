image: docker:dind

variables:
  PROJECT: "agents-kong"
  CSR_SUPPRESSION_LIST: "/tmp/csr-suppressions/amplify-central/golang-agents-common.json"

  # Fortify
  FORTIFY_PROJECT: "10853"
  FORTIFY_BUILD_ID: "agents-kong"
  FORTIFY_INCLUDE: "**/*.go"
  FORTIFY_EXCLUDE: "**/*_test.go"

  # Blackduck
  BLACKDUCK_PROJECT_NAME: "Amplify - APIC Kong Agents"

include:
  - project: "apigov/gitlabci"
    ref: master
    file: "/.gitlab-ci-sonar.yml"
  - project: "apigov/beano_cicd"
    ref: $BEANO_CICD_LATEST
    # the order of these include files is important
    file:
      - "/gitlabci/variables.yml"
      - "/gitlabci/restrictions.yml"
      - "/gitlabci/jobs.yml"
  - project: "scurity/gitlabci"
    ref: $SCURITY_LATEST
    file:
      - "/.gitlab-ci-fortify.yml"
      - "/.gitlab-ci-twistlock.yml"
      - "/.gitlab-ci-iriusrisk.yml"
      - "/.gitlab-ci-blackduck.yml"
      - "/.gitlab-ci-csr.yml"
  - project: "apigov/beano_cicd"
    ref: $BEANO_CICD_LATEST
    # the order of these include files is important
    file:
      - "/gitlabci/csrjobs.yml"

stages:
  - test
  - sonar-preview
  - sonar-publish
  - security-scans
  - security-review

twistlock-discovery:
  extends: .twistlock
  rules:
    - !reference [.mirror-branch-csr-rules, rules]
  tags:
    - twistlock
  before_script:
    - apk --no-cache update && apk add make
    - make docker-da
    - export IMAGE_NAME=kong-discovery-agent:latest

twistlock-traceability:
  extends: .twistlock
  rules:
    - !reference [.mirror-branch-csr-rules, rules]
  tags:
    - twistlock
  before_script:
    - apk --no-cache update && apk add make
    - make docker-ta
    - export IMAGE_NAME=kong-traceability-agent:latest

twistlock-discovery:on-schedule:
  extends: .twistlock
  rules:
    - !reference [.mirror-schedule-csr-rules, rules]
  dependencies: []
  before_script:
    - !reference [.get-agent-last-tag, script]
    - echo "Using the last tagged version ${LAST_TAG_VERSION}"
    - export IMAGE_NAME=ghcr.io/axway/kong_discovery_agent:${LAST_TAG_VERSION}
    - docker pull ${IMAGE_NAME}

twistlock-traceability:on-schedule:
  extends: .twistlock
  rules:
    - !reference [.mirror-schedule-csr-rules, rules]
  dependencies: []
  before_script:
    - !reference [.get-agent-last-tag, script]
    - echo "Using the last tagged version ${LAST_TAG_VERSION}"
    - export IMAGE_NAME=ghcr.io/axway/kong_traceability_agent:${LAST_TAG_VERSION}
    - docker pull ${IMAGE_NAME}

blackduck:on-schedule:
  rules:
    - !reference [.mirror-schedule-csr-rules, rules]
  before_script:
    - !reference [.get-agent-last-tag, script]

# overridden from csrjobs.yml because mirror repos like this one don't get merge events
fortify:
  rules:
    - !reference [.mirror-branch-csr-rules, rules]

fetch-fortify:
  rules:
    - !reference [.mirror-branch-csr-rules, rules]

blackduck-rapid:
  rules:
    - !reference [.mirror-branch-csr-rules, rules]

run-csr:
  rules:
    - !reference [.mirror-branch-csr-rules, rules]

####################
# CSR - overridden from csrjobs.yml to effectively not see these jobs ever. For some reason, probably multi-level
# extends and overrides, using only-never for these csr jobs doesn't work. Had to do it like this.
####################
fetch-iriusrisk:
  rules:
    - !reference [.only-never-rule, rules]

fetch-iriusrisk:on-schedule:
  rules:
    - !reference [.only-never-rule, rules]

twistlock:
  rules:
    - !reference [.only-never-rule, rules]
  dependencies:

twistlock:on-schedule:
  rules:
    - !reference [.only-never-rule, rules]
