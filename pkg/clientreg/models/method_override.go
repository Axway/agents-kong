// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MethodOverride method override
//
// swagger:model MethodOverride
type MethodOverride struct {

	// authentication profile
	// Max Length: 100
	// Pattern: ^[\w-_\:\.\/]*$
	AuthenticationProfile string `json:"authenticationProfile,omitempty"`

	// cors profile
	// Max Length: 100
	// Pattern: ^[\w-_\:\.\/]*$
	CorsProfile string `json:"corsProfile,omitempty"`

	// inbound security profile
	// Max Length: 100
	// Pattern: ^[\w-_\:\.\/]*$
	InboundSecurityProfile string `json:"inboundSecurityProfile,omitempty"`

	// API Method operation Id
	// Required: true
	// Max Length: 100
	OperationID *string `json:"operationId"`

	// The pipeline of policies associated with the request (Inbound).
	RequestPolicies []string `json:"requestPolicies"`

	// The pipeline of policies associated with the response (Outbound).
	ResponsePolicies []string `json:"responsePolicies"`
}

// Validate validates this method override
func (m *MethodOverride) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAuthenticationProfile(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCorsProfile(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInboundSecurityProfile(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperationID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MethodOverride) validateAuthenticationProfile(formats strfmt.Registry) error {
	if swag.IsZero(m.AuthenticationProfile) { // not required
		return nil
	}

	if err := validate.MaxLength("authenticationProfile", "body", m.AuthenticationProfile, 100); err != nil {
		return err
	}

	if err := validate.Pattern("authenticationProfile", "body", m.AuthenticationProfile, `^[\w-_\:\.\/]*$`); err != nil {
		return err
	}

	return nil
}

func (m *MethodOverride) validateCorsProfile(formats strfmt.Registry) error {
	if swag.IsZero(m.CorsProfile) { // not required
		return nil
	}

	if err := validate.MaxLength("corsProfile", "body", m.CorsProfile, 100); err != nil {
		return err
	}

	if err := validate.Pattern("corsProfile", "body", m.CorsProfile, `^[\w-_\:\.\/]*$`); err != nil {
		return err
	}

	return nil
}

func (m *MethodOverride) validateInboundSecurityProfile(formats strfmt.Registry) error {
	if swag.IsZero(m.InboundSecurityProfile) { // not required
		return nil
	}

	if err := validate.MaxLength("inboundSecurityProfile", "body", m.InboundSecurityProfile, 100); err != nil {
		return err
	}

	if err := validate.Pattern("inboundSecurityProfile", "body", m.InboundSecurityProfile, `^[\w-_\:\.\/]*$`); err != nil {
		return err
	}

	return nil
}

func (m *MethodOverride) validateOperationID(formats strfmt.Registry) error {

	if err := validate.Required("operationId", "body", m.OperationID); err != nil {
		return err
	}

	if err := validate.MaxLength("operationId", "body", *m.OperationID, 100); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this method override based on context it is used
func (m *MethodOverride) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MethodOverride) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MethodOverride) UnmarshalBinary(b []byte) error {
	var res MethodOverride
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
