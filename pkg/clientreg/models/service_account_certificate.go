// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServiceAccountCertificate service account certificate
//
// swagger:model ServiceAccountCertificate
type ServiceAccountCertificate struct {

	// Public key identifier, generated when uploading a new public key
	Kid string `json:"kid,omitempty"`

	// Private key, valid only at service account creation when generateKeyPair is true, empty in all other cases
	PrivateKey string `json:"privateKey,omitempty"`

	// Pem encoded public key
	// Max Length: 524288
	PublicKey string `json:"publicKey,omitempty"`
}

// Validate validates this service account certificate
func (m *ServiceAccountCertificate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePublicKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceAccountCertificate) validatePublicKey(formats strfmt.Registry) error {
	if swag.IsZero(m.PublicKey) { // not required
		return nil
	}

	if err := validate.MaxLength("publicKey", "body", m.PublicKey, 524288); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this service account certificate based on context it is used
func (m *ServiceAccountCertificate) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ServiceAccountCertificate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceAccountCertificate) UnmarshalBinary(b []byte) error {
	var res ServiceAccountCertificate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
