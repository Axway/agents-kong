// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ProxyState proxy state
//
// swagger:model ProxyState
type ProxyState struct {

	// When to retire the proxy
	// Format: date-time
	RetirementDate strfmt.DateTime `json:"retirementDate,omitempty"`

	// value
	// Required: true
	// Enum: [ACTIVE DEPRECATED RETIRED PUBLISHED]
	Value *string `json:"value"`
}

// Validate validates this proxy state
func (m *ProxyState) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRetirementDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProxyState) validateRetirementDate(formats strfmt.Registry) error {
	if swag.IsZero(m.RetirementDate) { // not required
		return nil
	}

	if err := validate.FormatOf("retirementDate", "body", "date-time", m.RetirementDate.String(), formats); err != nil {
		return err
	}

	return nil
}

var proxyStateTypeValuePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ACTIVE","DEPRECATED","RETIRED","PUBLISHED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		proxyStateTypeValuePropEnum = append(proxyStateTypeValuePropEnum, v)
	}
}

const (

	// ProxyStateValueACTIVE captures enum value "ACTIVE"
	ProxyStateValueACTIVE string = "ACTIVE"

	// ProxyStateValueDEPRECATED captures enum value "DEPRECATED"
	ProxyStateValueDEPRECATED string = "DEPRECATED"

	// ProxyStateValueRETIRED captures enum value "RETIRED"
	ProxyStateValueRETIRED string = "RETIRED"

	// ProxyStateValuePUBLISHED captures enum value "PUBLISHED"
	ProxyStateValuePUBLISHED string = "PUBLISHED"
)

// prop value enum
func (m *ProxyState) validateValueEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, proxyStateTypeValuePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ProxyState) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", m.Value); err != nil {
		return err
	}

	// value enum
	if err := m.validateValueEnum("value", "body", *m.Value); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this proxy state based on context it is used
func (m *ProxyState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProxyState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProxyState) UnmarshalBinary(b []byte) error {
	var res ProxyState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
