apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kong-agents.fullname" . }}-discovery
  labels:
    {{- include "kong-agents.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.discovery.replicaCount }}
  selector:
    matchLabels:
      {{- include "kong-agents.selectorLabels" . | nindent 6 }}
      {{- with .Values.additionalLabels }}
      {{- range $key, $value := . }}
      {{ default "none" $key }}: {{ default "none" $value | quote }}
      {{- end }}
      {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kong-agents.selectorLabels" . | nindent 8 }}
        {{- with .Values.additionalLabels }}
        {{- range $key, $value := . }}
        {{ default "none" $key }}: {{ default "none" $value | quote }}
        {{- end }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kong-agents.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.discovery.image.repository }}:{{ .Values.discovery.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.discovery.image.pullPolicy }}
          ports:
          - name: probe-port
            containerPort: {{ .Values.statusPort }}
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /status
              port: probe-port
            {{- with .Values.livenessProbe }}
            {{- range $key, $value := . }}
            {{ $key }}: {{ $value }}
            {{- end }}
            {{- end }}
          readinessProbe:
            httpGet:
              path: /status
              port: probe-port
            {{- with .Values.readinessProbe }}
            {{- range $key, $value := . }}
            {{ $key }}: {{ $value }}
            {{- end }}
            {{- end }}
          env:
            - name: KONG_ADMIN_URL
              value: "{{ .Values.kong.admin.url }}"
            - name: KONG_PROXY_HOST
              value: "{{ .Values.kong.proxy.host }}"
            - name: KONG_PROXY_PORTS_HTTP
              value: "{{ .Values.kong.proxy.ports.http }}"
            - name: KONG_PROXY_PORTS_HTTPS
              value: "{{ .Values.kong.proxy.ports.https }}"
            {{- if (include "kong-agents.specDownloadPathsString" .) }}
            - name: KONG_SPEC_URLPATHS
              value: {{ include "kong-agents.specDownloadPathsString" . }}
            {{- end }}
            {{- if .Values.kong.spec.localPath }}
            - name: KONG_SPEC_LOCALPATH
              value: /specs
            {{- end }}
            {{- if .Values.kong.admin.auth.apikey.value }}
            - name: KONG_ADMIN_AUTH_APIKEY_VALUE
              valueFrom:
                secretKeyRef: 
                  name: kong-admin-auth-apikey
                  key: value
            - name: KONG_ADMIN_AUTH_APIKEY_HEADER
              valueFrom:
                secretKeyRef: 
                  name: kong-admin-auth-apikey
                  key: header
            {{- end }}
          {{- with .Values.env }}
          {{- range $key, $value := . }}
          {{- if and (not (eq (toString $value) ""))
                     (not (eq (toString $key) ""))
                     (not (has (toString $key) (list "KONG_ADMIN_URL" 
                                                     "KONG_ADMIN_AUTH_APIKEY_HEADER" 
                                                     "KONG_ADMIN_AUTH_APIKEY_VALUE" 
                                                     "KONG_PROXY_HOST" 
                                                     "KONG_PROXY_PORTS_HTTP" 
                                                     "KONG_PROXY_PORTS_HTTPS" 
                                                     "KONG_SPEC_LOCALPATH"
                                                     "KONG_SPEC_URLPATHS")))
           }} 
            - name: {{ $key }}
              value: {{ $value | quote }} 
          {{- end }}
          {{- end }}
          {{- end }}
            - name: CENTRAL_AUTH_PRIVATEKEY
              value: "/keys/private_key.pem"
            - name: CENTRAL_AUTH_PUBLICKEY
              value: "/keys/public_key.pem"
          volumeMounts:
            - name: "kong-agent-keys"
              mountPath: "/keys"
          {{- if .Values.kong.spec.localPath }}
            - name: "kong-agent-specs"
              mountPath: "/specs"
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: kong-agent-keys
        secret:
          secretName: {{ .Values.secrets.keys }}
          items:
          - key: private_key
            path: private_key.pem
          - key: public_key
            path: public_key.pem
      {{- if .Values.kong.spec.localPath }}
      {{- with .Values.kong.spec.localPath }}
      - name: kong-agent-specs
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
